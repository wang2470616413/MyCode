#include<stdio.h>
int init(int* father, int* weight, int n);
int find(int* father, int* weight, int x);
int merger(int* father, int* weight, int x, int y, int r);
/*
10 5
1 10 100
7 10 28
1 3 32
4 6 41
6 6 1

10 6
1 10 100
7 10 28
1 3 32
4 6 41
6 6 1
4 5 39
*/
int main()
{
	int n, m , count=0;
	while(~scanf("%d %d", &n, &m))
	{
	count = 0;
	int *father = new int [n+5];
	int *weight = new int [n+5];
	init(father,weight,n+3);
	while(m--)
	{ 
		int left, right, dis;
		scanf("%d %d %d",&left, &right, &dis);
		if(find(father,weight,left) == find(father,weight,++right))
		{
			if(weight[left] - weight[right]!= dis)
			count++;
		}
		else
		{
			merger(father,weight,left,right,dis);
		
		}
	} 
	printf("%d\n",count);
	
}
	return 0;
}


int init(int* father, int* weight, int n)
{
	for(int i = 0; i <= n; i++)
	{
		father[i] = i;
		weight[i] = 0;
	}
	return 0;
}
int find(int* father, int* weight, int x)
{
	if(father[x] == x)
	return x;
	else
	{
		int temp = father[x];
		father[x] = find(father, weight, father[x]);
		weight[x] = (weight[x] + weight[temp]);
		return father[x]; 
	}
}
int merger(int* father, int* weight, int x, int y, int r)
{
	int a = find(father,weight,x);
	int b = find(father,weight,y);
	if(a != b)
	{
		father[a] = b;
		weight[a] = (r + weight[y] - weight[x]);
	}
}
